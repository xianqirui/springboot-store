<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace：用于指定当前文件与哪个接口进行映射-->
<mapper namespace="com.xqr.stroe.mapper.AddressMapper">
    <!--自定义映射规则-->
    <!--
    type:表示与java中哪个类匹配
    -->
    <resultMap id="AddressEntityMap" type="com.xqr.stroe.entity.Address">
        <id column="aid" property="aid"/>
        <result column="province_code" property="provinceCode"/>
        <result column="province_name" property="provinceName"/>
        <result column="city_code" property="cityCode"/>
        <result column="city_name" property="cityName"/>
        <result column="area_code" property="areaCode"/>
        <result column="area_name" property="areaName"/>
        <result column="is_default" property="isDefault"/>
        <result column="created_user" property="createdUser"/>
        <result column="created_time" property="createdTime"/>
        <result column="modified_user" property="modifiedUser"/>
        <result column="modified_time" property="modifiedTime"/>
    </resultMap>
    <!-- 插入收货地址数据：Integer insert(Address address) -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="aid">
        INSERT INTO t_address (
            uid, name, province_name, province_code, city_name, city_code, area_name, area_code, zip,
            address, phone, tel, tag, is_default, created_user, created_time, modified_user, modified_time
        ) VALUES (
                     #{uid}, #{name}, #{provinceName}, #{provinceCode}, #{cityName}, #{cityCode}, #{areaName},
                     #{areaCode}, #{zip}, #{address}, #{phone}, #{tel}, #{tag}, #{isDefault}, #{createdUser},
                     #{createdTime}, #{modifiedUser}, #{modifiedTime}
                 )
    </insert>
    <!-- 统计某用户的收货地址数据的数量：Integer countByUid(Integer uid) -->
    <select id="countByUid" resultType="integer">
        select count(*) from t_address where uid=#{uid}
    </select>
    <!--根据用户id查询用户收货地址数据-->
    <select id="findByUid" resultMap="AddressEntityMap">
        select * from t_address where uid=#{uid}
        order by is_default DESC,created_time DESC
    </select>

    <update id="updateNonDefault">
        update t_address set is_default=0 where uid=#{uid}
    </update>
    <update id="updateDefault">
        update t_address set is_default=1,modified_user=#{modifiedUser}, modified_time=#{modifiedTime} where aid=#{aid}
    </update>
    <select id="findByAid" resultMap="AddressEntityMap">
        select * from t_address where aid=#{aid}
    </select>
    <delete id="deleteByAid">
        delete from t_address where aid=#{aid}
    </delete>
    <select id="findLastModified" resultMap="AddressEntityMap">
        select * from t_address where uid=#{uid} order by modified_time DESC limit 0,1
    </select>
</mapper>